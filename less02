от// 1. Дан код:
var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2 -- В данном случае используется префиксная форма записи оператора инкрементирования, сперва увеличивается переменная "а" на 1, потом ее новое значение присваивается переменной "с".
d = b++; alert(d);           // 1 -- постфиксная форма оператора инкремента. Сперва переменной "d" присваивается значение переменной "b", а уже потом "b" становится равным двум
c = (2+ ++a); alert(c);      // 5 -- к двум прибавляем "a" увеличенную еще на 1 с помощью префиксной формы (то есть a = 3 для этого выражения)
d = (2+ b++); alert(d);      // 4 -- для данного выражения берем последнее значение b и уже потом увеличиваем его на 1. То есть 2+2=4, но после выражения b = 3
alert(a);                    // 3 -- так как мы не сбрасывали внесенные изменения переопределением переменных, то после выражений оба равны трем, так как к обеим переменным дважды применяли оператор инкрементирования.
alert(b);                    // 3

В постфиксной форме сначала происходит возвращение значения, а потом выполняется инкрементирование. 
В префиксной форме инкрементирование производится сразу, а возврат — уже с обновленным значением.

// 2. Чему будет равен x в примере ниже?
var a = 2;
var x = 1 + (a *= 2);

x будет равен 5.
внутри выражения мы используем сокрашенную запись a *= 2, что соответствует а = а * 2
Теперь a = 4, и к единице мы прибавляем уже его.

// 3. Объявить две переменные a и b и задать им целочисленные произвольные начальные значения.
// Затем написать скрипт, который работает по следующему принципу:
// - если a и b положительные, вывести их разность (ноль можно считать положительным числом); 
// - если а и b отрицательные, вывести их произведение;
// - * если а и b разных знаков, вывести их сумму;

function question3() {
    let a; // ДА, я объявляю переменные без значений т.к. в условии сказано
    let b; // не объявить переменные со значениями, а сначала объявить переменные, затем задать значения
    a = Math.round(Math.random() * 200 - 100);
    b = Math.round(Math.random() * 200 - 100);
    if (a > 0 && b > 0) {
        console.log(`${a} - ${b} = ${a - b}`);
    } else if (a < 0 && b < 0) {
        console.log(`${a} * ${b} = ${a * b}`);
    } else if (a * b < 0) {
        console.log(`${a} + ${b} = ${a + b}`);
    } else {
        console.log(`Одно из чисел равно 0: a = ${a}, b = ${b}`);
    }
}
// Задание 4
// Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.
// В конце второго урока вы сказали, что это задание должно быть выполнено с помощью оператора switch и что пользователю должна отобразиться последовательность чисел от 0 до введенного им числа (но в пределах диапазона от 0 до 15) Например, пользователь вводит число 5 и он должен увидеть отсчет от 0 до 5. Это противоречит написанному в самом задании.
// С помощью оператора switch я такой код вывести не смог. Если следовать букве написанного в задании, то код будет выглядеть так:

let userNumber = +prompt("Введите любое целое число от 0 до 15");

switch (userNumber) {
  case 0:
    console.log(userNumber);
    userNumber++;
  case 1:
    console.log(userNumber);
    userNumber++;
  case 2:
    console.log(userNumber);
    userNumber++;
  case 3:
    console.log(userNumber);
    userNumber++;
  case 4:
    console.log(userNumber);
    userNumber++;
  case 5:
    console.log(userNumber);
    userNumber++;
  case 6:
    console.log(userNumber);
    userNumber++;
  case 7:
    console.log(userNumber);
    userNumber++;
  case 8:
    console.log(userNumber);
    userNumber++;
  case 9:
    console.log(userNumber);
    userNumber++;
  case 10:
    console.log(userNumber);
    userNumber++;
  case 11:
    console.log(userNumber);
    userNumber++;
  case 12:
    console.log(userNumber);
    userNumber++;
  case 13:
    console.log(userNumber);
    userNumber++;
  case 14:
    console.log(userNumber);
    userNumber++;
  case 15:
    console.log(userNumber);
    break;
  default:
    console.log("Вы ввели неправильное число!");
    break;
}
// Задание 5
// Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.

// Сложение
function addition(a, b) {
  return a + b;
}

// Вычитание
function subtraction(a, b) {
  return a - b;
}

// Умножение
function multiplication(a, b) {
  return a * b;
}

// Деление
function division(a, b) {
  return a / b;
}

// Задание 6
// Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от переданного значения операции
// выполнить одну из арифметических операций (использовать функции из пункта 5) и вернуть полученное значение (использовать switch).

function mathOperation(arg1, arg2, operation) {
  switch (operation) {
    case "+":
      result = addition(arg1, arg2);
      break;
    case "-":
      result = subtraction(arg1, arg2);
      break;
    case "*":
      result = multiplication(arg1, arg2);
      break;
    case "/":
      result = division(arg1, arg2);
      break;
  }
  return result;
}

console.log(mathOperation(5, 5, "+"));
console.log(mathOperation(5, 5, "-"));
console.log(mathOperation(5, 5, "*"));
console.log(mathOperation(5, 5, "/"));

/ Задание 7
// Сравнить null и 0. Попробуйте объяснить результат.

// В сравнениях ниже срабатывает приведение типов. Null преобразуется в 0.
console.log(null > 0); // false
console.log(null < 0); // false
console.log(null >= 0); // true
console.log(null <= 0); // true

// В этом сравнении срабатывает иной алгоритм сравнения, при котором null не преобразуется в иной тип.
console.log(null == 0); // false


