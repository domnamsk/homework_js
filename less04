/ Задача 1:
   Написать функцию, преобразующую число в объект. Передавая на вход число от 0 до 999, мы
   должны получить на выходе объект, в котором в соответствующих свойствах описаны
   единицы, десятки и сотни. Например, для числа 245 мы должны получить следующий объект:
   {‘единицы’: 5, ‘десятки’: 4, ‘сотни’: 2}. Если число превышает 999, необходимо выдать
   соответствующее сообщение с помощью console.log и вернуть пустой объект./


var theNumber = 123;
var theObject = {};
function expandNumber(theNumber) {
    if(theNumber > 999) {
        console.log("Число больше 999");
        return theObject;
    }

    var x = theNumber / 100;
    var hundreds = Math.trunc(x);

    var y = (x - hundreds) * 10;
    var tens = Math.trunc(y);

    var z = (y - tens) * 10;
    var units = Math.round(z);

    theObject.hundreds = hundreds;
    theObject.tens = tens;
    theObject.units = units;

    return theObject;
}

console.log("Число: " + theNumber);
console.log(expandNumber(theNumber) );


console.log("\n");
console.log("\n");

console.log("digit :");


/ Задача 2:
Продолжить работу с интернет-магазином:
В прошлом домашнем задании вы реализовали корзину на базе массивов. Какими объектами можно заменить их элементы?
Реализуйте такие объекты.
Перенести функционал подсчета корзины на объектно-ориентированную базу./

const Basket = {
    goods: [
        {
            id_product: 123,
            product_name: "Ноутбук",
            price: 45600,
            quantity: 1
        },
        {
            id_product: 456,
            product_name: "Мышка",
            price: 1000,
            quantity: 2
        }
    ],
    countBasketPrice() {
        return this.goods.reduce((totalPrice, cartItem) => totalPrice += cartItem.price * cartItem.quantity, 0);
    }
};

console.log(Basket.countBasketPrice());
